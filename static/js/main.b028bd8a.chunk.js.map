{"version":3,"sources":["Screen.js","Button.js","Constants.js","Keypad.js","Calculator.js","index.js"],"names":["Screen","style","this","props","properties","message","Component","Button","buttonStyle","onClick","onMouseUp","bind","onMouseDown","onMouseOut","value","NBR_ZERO","ASPECT_RATIO","window","innerWidth","innerHeight","Keypad","i","backgroundColor","width","Constants","height","fontSize","key","event","renderButton","marginLeft","Calculator","state","leftNumber","rightNumber","operator","result","array","length","text","join","indexOf","parseFloat","parseInt","target","slice","toString","split","left","getNumberFromArray","right","concat","find","setState","isNaN","tempFloatCnt","substr","toFixed","screenStyleProperties","textAlign","display","paddingTop","showMessage","handleClick","handleOnMouseUp","handleOnMouseDown","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b028bd8a.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Screen extends Component {\n  render() {\n    return(\n      <label style={this.props.properties}>\n        {this.props.message}\n      </label>\n    );\n  }\n}\n\nexport default Screen;\n","import React, {Component} from 'react';\n\nclass Button extends Component {\n  render() {\n    return(\n      <button style={this.props.buttonStyle}\n              onClick={this.props.onClick}\n              onMouseUp={this.props.onMouseUp.bind(this)}\n              onMouseDown={this.props.onMouseDown.bind(this)}\n              onMouseOut={this.props.onMouseUp.bind(this)}\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","\nexport const OPER_ADD = \"+\"\nexport const OPER_SUBS = \"-\";\nexport const OPER_MULT = \"*\";\nexport const OPER_DIV = \"/\";\nexport const OPER_EQUAL = \"=\";\nexport const NBR_ZERO = '0';\nexport const NBR_ONE = '1';\nexport const NBR_TWO = '2';\nexport const NBR_THREE = '3';\nexport const NBR_FOUR = '4';\nexport const NBR_FIVE = '5';\nexport const NBR_SIX = '6';\nexport const NBR_SEVEN = '7';\nexport const NBR_EIGHT = '8';\nexport const NBR_NINE = '9';\nexport const PERIOD = '.';\nexport const KEY_DELETE = 'Delete';\nexport const KEY_CLEAR = 'Clear';\nexport const ASPECT_RATIO = window.innerWidth / window.innerHeight;\n","import React, {Component} from 'react';\nimport Button from './Button';\nimport * as Constants from './Constants'\n\nclass Keypad extends Component {\n  renderButton(i) {\n\n    const buttonStyle = {\n      backgroundColor:'lightgreen',\n      width: 80 * Constants.ASPECT_RATIO,\n      height: 35 * Constants.ASPECT_RATIO,\n      fontSize:`${15 * Constants.ASPECT_RATIO}px`,\n    };\n\n    return <Button\n      key={i}\n      value={i}\n      onClick={() => this.props.onClick(i)}\n      onMouseUp={(event) => this.props.onMouseUp(event)}\n      onMouseDown={(event) => this.props.onMouseDown(event)}\n      buttonStyle={buttonStyle}\n    />;\n  }\n\n  render() {\n    return(\n      <div>\n        <div>\n          {this.renderButton(Constants.KEY_CLEAR)}\n          {this.renderButton(Constants.KEY_DELETE)}\n          {this.renderButton(Constants.PERIOD)}\n          {this.renderButton(Constants.OPER_DIV)}\n        </div>\n        <div>\n          {this.renderButton(Constants.NBR_SEVEN)}\n          {this.renderButton(Constants.NBR_EIGHT)}\n          {this.renderButton(Constants.NBR_NINE)}\n          {this.renderButton(Constants.OPER_MULT)}\n        </div>\n        <div>\n          {this.renderButton(Constants.NBR_FOUR)}\n          {this.renderButton(Constants.NBR_FIVE)}\n          {this.renderButton(Constants.NBR_SIX)}\n          {this.renderButton(Constants.OPER_SUBS)}\n        </div>\n        <div>\n          {this.renderButton(Constants.NBR_ONE)}\n          {this.renderButton(Constants.NBR_TWO)}\n          {this.renderButton(Constants.NBR_THREE)}\n          {this.renderButton(Constants.OPER_ADD)}\n        </div>\n        <div style={{marginLeft: 80 * Constants.ASPECT_RATIO}}>\n          {this.renderButton(Constants.NBR_ZERO)}\n          {this.renderButton(Constants.OPER_EQUAL)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Keypad;\n","import React, {Component} from 'react';\nimport Screen from './Screen';\nimport Keypad from './Keypad';\nimport * as Constants from './Constants'\n\nclass Calculator extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      leftNumber: [],\n      rightNumber: [],\n      operator: null,\n      result: null\n    };\n  }\n\n  getNumberFromArray(array) {\n    if(array.length === 0)\n      return 0;\n\n    const text = array.join('');\n\n    if(text.indexOf(Constants.PERIOD) > 0)\n      return parseFloat(text);\n    else\n      return parseInt(text, 10);\n  }\n\n  handleOnMouseUp(event) {\n    event.target.style.backgroundColor = 'lightgreen';\n  }\n\n  handleOnMouseDown(event) {\n    event.target.style.backgroundColor = 'lightgray';\n  }\n\n  handleClick(i) {\n    let leftNumber = this.state.leftNumber.slice()\n      , rightNumber = this.state.rightNumber.slice()\n      , operator = this.state.operator\n      , result = this.state.result;\n\n    if(i === Constants.KEY_CLEAR) {\n      leftNumber = [];\n      rightNumber = [];\n      operator = null;\n      result = null;\n    } else if(!result) { //If result is not yet available... check the clicked Key\n      if(i === Constants.KEY_DELETE) {\n        if(rightNumber.length > 0) {\n          leftNumber = leftNumber.slice();\n          rightNumber = rightNumber.slice(0, rightNumber.length - 1);\n        } else {\n          leftNumber = leftNumber.slice(0, leftNumber.length - 1);\n          rightNumber = rightNumber.slice();\n        }\n      } else if(i === Constants.OPER_ADD ||\n        i === Constants.OPER_SUBS ||\n        i === Constants.OPER_MULT ||\n        i === Constants.OPER_DIV) {\n        if(leftNumber.length === 0) {\n          leftNumber = [Constants.NBR_ZERO];\n        }\n        operator = i;\n      } else if(i === Constants.OPER_EQUAL) {\n        if(leftNumber.length > 0 && operator && rightNumber.length > 0) {\n          const left = this.getNumberFromArray(leftNumber);\n          const right = this.getNumberFromArray(rightNumber);\n\n          if(operator === Constants.OPER_ADD)\n            result = (left + right).toString();\n          else if(operator === Constants.OPER_SUBS)\n            result = (left - right).toString();\n          else if(operator === Constants.OPER_MULT)\n            result = (left * right).toString();\n          else if(operator === Constants.OPER_DIV)\n            result = (left / right).toString();\n        }\n      } else {\n        if(operator) {\n          if(i !== Constants.PERIOD || (i === Constants.PERIOD && !rightNumber.find((value) => value === i))) {\n            leftNumber = leftNumber.slice();\n            if(i === Constants.PERIOD && rightNumber.length === 0) {\n              rightNumber = [Constants.NBR_ZERO].concat([i]);\n            } else {\n              rightNumber = rightNumber.slice().concat([i]);\n            }\n          }\n        } else {\n          if(i !== Constants.PERIOD || (i === Constants.PERIOD && !leftNumber.find((value) => value === i))) {\n            if(i === Constants.PERIOD && leftNumber.length === 0) {\n              leftNumber = [Constants.NBR_ZERO].concat([i]);\n            } else {\n              leftNumber = leftNumber.slice().concat([i]);\n            }\n            rightNumber = rightNumber.slice();\n          }\n        }\n      }\n    } else { //Result is available... Start over\n      if(i === Constants.KEY_DELETE) {\n        //Delete when result available cleans everything\n        leftNumber = [];\n        rightNumber = [];\n        operator = null;\n        result = null;\n      } else if(i === Constants.OPER_ADD ||\n        i === Constants.OPER_SUBS ||\n        i === Constants.OPER_MULT ||\n        i === Constants.OPER_DIV) {\n        //Left number is now result, right number is empty\n        leftNumber = result.toString().split('');\n        rightNumber = [];\n        operator = i;\n        result = null;\n      } else if(i === Constants.OPER_EQUAL) {\n        //Continue operating... Left side is result, right side the same number\n        leftNumber = result.toString().split('');\n        const left = this.getNumberFromArray(leftNumber);\n        const right = this.getNumberFromArray(rightNumber);\n\n        if(operator === Constants.OPER_ADD)\n          result = (left + right).toString();\n        else if(operator === Constants.OPER_SUBS)\n          result = (left - right).toString();\n        else if(operator === Constants.OPER_MULT)\n          result = (left * right).toString();\n        else if(operator === Constants.OPER_DIV)\n          result = (left / right).toString();\n      } else {\n        //Reset and store the first number clicked on the left side\n        leftNumber = [];\n        rightNumber = [];\n        operator = null;\n        result = null;\n\n        if(i === Constants.PERIOD) {\n          leftNumber = [Constants.NBR_ZERO].concat([i]);\n        } else {\n          leftNumber = [i];\n        }\n      }\n    }\n\n    //If natural number is too big... reset!\n    if(result && result.length > 15 && result.indexOf(Constants.PERIOD) < 0) {\n      leftNumber = [];\n      rightNumber = [];\n      operator = null;\n    }\n\n    this.setState({\n      leftNumber: leftNumber,\n      rightNumber: rightNumber,\n      operator: operator,\n      result: result,\n    });\n  }\n\n  showMessage() {\n    let message;\n\n    if(this.state.result) {\n      message = this.state.result.toString();\n    } else if(this.state.rightNumber.length > 0) {\n      message = this.getNumberFromArray(this.state.rightNumber).toString();\n    } else {\n      message = this.getNumberFromArray(this.state.leftNumber).toString();\n    }\n\n    const MAX_SCREEN_LENGTH = 15;\n\n    if(isNaN(message)) {\n      message = \"Not a number\";\n    } else if(message.length > MAX_SCREEN_LENGTH) {\n      if(message.indexOf(Constants.PERIOD) >= 0) {\n        const decimalCnt = message.substr(0, message.indexOf(Constants.PERIOD)).length;\n        const tempFloatCnt = MAX_SCREEN_LENGTH - decimalCnt;\n        const floatingCnt = message.substr(message.indexOf(Constants.PERIOD), message.length).length;\n\n        if(floatingCnt > tempFloatCnt)\n          message = parseFloat(message).toFixed(tempFloatCnt);\n      } else {\n        message = \"Number too big\";\n      }\n    }\n\n    if(!message) {\n      return Constants.NBR_ZERO;\n    } else {\n      return message;\n    }\n  }\n\n  render() {\n    const screenStyleProperties = {\n      width: 320 * Constants.ASPECT_RATIO,\n      height: 50 * Constants.ASPECT_RATIO,\n      backgroundColor: 'lightgray',\n      textAlign:'right',\n      display:'block',\n      paddingTop:`${25 * Constants.ASPECT_RATIO}px`,\n      fontSize:`${40 * Constants.ASPECT_RATIO}px`,\n    };\n\n    return (\n      <div>\n        <h1 style={{marginLeft:`${90 * Constants.ASPECT_RATIO}px`}}>\n          The Calculator App!\n        </h1>\n        <div>\n          <Screen properties={screenStyleProperties} message={this.showMessage()}/>\n        </div>\n        <div>\n          <Keypad\n            onClick={(i) => this.handleClick(i)}\n            onMouseUp={(event) => this.handleOnMouseUp(event)}\n            onMouseDown={(event) => this.handleOnMouseDown(event)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calculator from './Calculator';\n\nReactDOM.render(\n  <Calculator />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}